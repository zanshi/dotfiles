#!/bin/bash
cd $(dirname $0)
source config

#system_volume=$((`pacmd list-sinks | grep -A6 "name: <alsa_output.usb-Creative_Technology_USB_Sound_Blaster_HD_00000AGu-00-HD.analog-stereo>" | 
#grep "volume: " | cut -d'/' -f2 | head -c4`))
#system_volume="volume: $(amixer get Master | tail -n 1 | awk '{print $5}' | tr -d '[]%')"
#mpd_volume=$((`pacmd list-sink-inputs | grep -B10 "Music Player Daemon" | grep "volume: " | cut -d'/' -f2 | head -c4`))




#output="%{F$COLOR_MEDIA_MPD_VOLUME_ICON}⮜%{F-} %{F$COLOR_MEDIA_MPD_VOLUME}%$mpd_volume%% %{F$COLOR_MEDIA_SYSTEM_VOLUME_ICON}⮞%{F-} %{F$COLOR_MEDIA_SYSTEM_VOLUME}%$system_volume%%%{F-}"


#echo $output;

# mpd info

#[[ -z "$(pidof mpd)" ]] && { echo "p  mpd is not running"; sleep 1; continue; }
#[[ "$(printf "status\nclose\n" | curl --connect-timeout 1 -fsm 3 telnet://localhost:6600 | grep state:)" = "state: pause" ]] && { echo "p  mpd paused"; sleep 1; continue; }
#[[ "$(printf "status\nclose\n" | curl --connect-timeout 1 -fsm 3 telnet://localhost:6600 | grep state:)" = "state: stop" ]] && { echo "p"; sleep 1; continue; }
#echo "p  now playing: $(mpc current -f %artist%) > $(mpc current -f %title%)" | tr '[:upper:]' '[:lower:]'


style="%{+u}%{F$COLOR_MPD_ICON}♪ %{F$COLOR_MPD_FOREGROUND}%{B$COLOR_MPD_BACKGROUND}%"

if [ -z "$(pidof mpd)" ] ; then
    mpd="mpd is not running"
elif [ "$(printf "status\nclose\n" | curl --connect-timeout 1 -fsm 3 telnet://localhost:6600 | grep state:)" = "state: pause" ] ; then
    mpd="mpd paused"
elif [ "$(printf "status\nclose\n" | curl --connect-timeout 1 -fsm 3 telnet://localhost:6600 | grep state:)" = "state: stop" ] ; then
    mpd="mpd is stopped"
else
    #mpd="now playing: $(mpc current -f %artist%) > $(mpc current -f %title%)" | tr '[:upper:]' '[:lower:]'
    mpd="now playing: $(mpc current -f %artist%) > $(mpc current -f %title%)"
fi



output="$COLOR_RESET$style$mpd$COLOR_RESET"

#output="($mpd_status) $mpd_smart $mpd_bar(2,10)"

echo $output







